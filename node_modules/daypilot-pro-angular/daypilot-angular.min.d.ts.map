{"version":3,"file":"daypilot-angular.min.d.ts","sources":["daypilot-angular.min.d.ts"],"names":[],"mappingssourcesContent":["/* Copyright 2005 - ${year} Annpoint, s.r.o.\r\n Use of this software is subject to license terms.\r\n http://www.daypilot.org/\r\n */\r\n\r\ntype GlobalDate = Date;\r\n\r\nexport module DayPilot {\r\n\r\n    class Scheduler {\r\n        constructor(id: string, options?: any);\r\n\r\n        init(): void;\r\n        message(msg: string, options?: { delay?: number, cssClass?: string }): void;\r\n        update(): void;\r\n        dispose(): void;\r\n\r\n        autoRefreshPause(): void;\r\n        autoRefreshStart(force: boolean): void;\r\n        clearSelection(): void;\r\n        exportAs(format?: \"svg\" | \"png\" | \"jpeg\", options?: any): Export;\r\n        getScrollX(): number;\r\n        getScrollY(): number;\r\n        hide(): void;\r\n        scrollTo(date: string | DayPilot.Date): void;\r\n        scrollTo(date: string | DayPilot.Date, animated: boolean | number | \"fast\" | \"normal\" | \"slow\" | \"linear\", position?: \"left\" | \"middle\" | \"right\"): void;\r\n        scrollToResource(id: string): void;\r\n        setScroll(scrollX: number, scrollY: number): void;\r\n        setScrollX(scrollX: number): void;\r\n        setScrollY(scrollY: number): void;\r\n        show(): void;\r\n        uiBlock(): void;\r\n        uiUnblock(): void;\r\n        visibleStart(): DayPilot.Date;\r\n        visibleEnd(): DayPilot.Date;\r\n        getViewPort() : { start: DayPilot.Date, end: DayPilot.Date, resources: string[]};\r\n        multiselect: {\r\n            add(e: DayPilot.Event, dontRedraw?: boolean): void;\r\n            clear(dontRedraw?: boolean): void;\r\n            events(): DayPilot.Event[];\r\n            redraw(): void;\r\n            remove(e: DayPilot.Event, dontRedraw?: boolean): void;\r\n            isSelected(e: DayPilot.Event): boolean;\r\n        };\r\n        setHeight(pixels: number): void;\r\n        events: {\r\n            list: EventData[];\r\n\r\n            add(e: DayPilot.Event): void;\r\n            addByData(data: EventData): void;\r\n            remove(e: DayPilot.Event): void;\r\n            removeById(id: string | number): void;\r\n            removeByData(data: EventData): void;\r\n            update(e: DayPilot.Event): void;\r\n            updateByData(data: EventData): void;\r\n\r\n            all(): DayPilot.Event[];\r\n            edit(e: DayPilot.Event): void;\r\n            filter(param: any): void;\r\n            find(id: string): DayPilot.Event;\r\n            findRecurrent(masterId: string, time: DayPilot.Date | string): DayPilot.Event;\r\n            load(url: string,\r\n                 success: {(args: { data: any; preventDefault(): void; } ):void},\r\n                 error: {(args: { request: XMLHttpRequest, exception: any; } ):void}\r\n            ): void;\r\n\r\n        };\r\n\r\n        cells: {\r\n            findXy(x: number, y: number): CellArray;\r\n            find(start: DayPilot.Date, resource: string): CellArray;\r\n            findByPixels(x: number, y: number): CellArray;\r\n        };\r\n\r\n        links:  {\r\n            list: LinkData[];\r\n        };\r\n\r\n        rows: {\r\n            all(): DayPilot.Row[];\r\n            visible(): DayPilot.Row[];\r\n            edit(row: DayPilot.Row): void;\r\n            expand(level?: number): void;\r\n            expandAll(): void;\r\n            filter(param: any): void;\r\n            find(id: string, start?: DayPilot.Date | string): DayPilot.Row;\r\n            headerHide(): void;\r\n            headerShow(): void;\r\n            headerToggle(): void;\r\n            remove(row: DayPilot.Row): void;\r\n            load(url: string,\r\n                 success: {(args: { data: any; preventDefault(): void; } ):void},\r\n                 error: {(args: { request: XMLHttpRequest, exception: any; } ):void}\r\n            ): void;\r\n\r\n            selection: {\r\n                add(row: DayPilot.Row): void;\r\n                clear(): void;\r\n                get(): DayPilot.Row[];\r\n                isSelected(row: DayPilot.Row): boolean;\r\n                remove(row: Row): void;\r\n            };\r\n\r\n        };\r\n\r\n        resources: ResourceData[];\r\n\r\n        onAfterEventRender: EventHandler;\r\n        onAfterRender: EventHandler;\r\n        onAfterUpdate: EventHandler;\r\n        onAutoRefresh: EventHandler;\r\n        onBeforeCellExport: EventHandler;\r\n        onBeforeCellRender: EventHandler;\r\n        onBeforeEventExport: EventHandler;\r\n        onBeforeEventRender: EventHandler;\r\n        onBeforeGroupRender: EventHandler;\r\n        onBeforeResHeaderRender: EventHandler;\r\n        onBeforeRowHeaderRender: EventHandler;\r\n        onBeforeRowHeaderExport: EventHandler;\r\n        onBeforeTimeHeaderRender: EventHandler;\r\n        onBeforeTimeHeaderExport: EventHandler;\r\n        onCallBackStart: EventHandler;\r\n        onCallBackEnd: EventHandler;\r\n        onDimensionsChanged: EventHandler;\r\n        onEventClick: EventHandler;\r\n        onEventClicked: EventHandler;\r\n        onEventDelete: EventHandler;\r\n        onEventDeleted: EventHandler;\r\n        onEventDoubleClick: EventHandler;\r\n        onEventDoubleClicked: EventHandler;\r\n        onEventEdit: EventHandler;\r\n        onEventEdited: EventHandler;\r\n        onEventMove: EventHandler;\r\n        onEventMoved: EventHandler;\r\n        onEventMoving: EventHandler;\r\n        onEventResize: EventHandler;\r\n        onEventResized: EventHandler;\r\n        onEventResizing: EventHandler;\r\n        onEventRightClick: EventHandler;\r\n        onEventRightClicked: EventHandler;\r\n        onEventSelect: EventHandler;\r\n        onEventSelected: EventHandler;\r\n        onGridMouseDown: EventHandler;\r\n        onIncludeTimeCell: EventHandler;\r\n        onLoadNode: EventHandler;\r\n        onResourceCollapse: EventHandler;\r\n        onResourceExpand: EventHandler;\r\n        onResourceHeaderClick: EventHandler;\r\n        onResourceHeaderClicked: EventHandler;\r\n        onRowClick: EventHandler;\r\n        onRowClicked: EventHandler;\r\n        onRowDoubleClick: EventHandler;\r\n        onRowDoubleClicked: EventHandler;\r\n        onRowEdit: EventHandler;\r\n        onRowEdited: EventHandler;\r\n        onRowHeaderColumnResized: EventHandler;\r\n        onRowMove: EventHandler;\r\n        onRowMoved: EventHandler;\r\n        onRowMoving: EventHandler;\r\n        onRowSelect: EventHandler;\r\n        onRowSelected: EventHandler;\r\n        onScroll: EventHandler;\r\n        onTimeHeaderClick: EventHandler;\r\n        onTimeHeaderClicked: EventHandler;\r\n        onTimeRangeClick: EventHandler;\r\n        onTimeRangeClicked: EventHandler;\r\n        onTimeRangeDoubleClick: EventHandler;\r\n        onTimeRangeDoubleClicked: EventHandler;\r\n        onTimeRangeRightClick: EventHandler;\r\n        onTimeRangeRightClicked: EventHandler;\r\n        onTimeRangeSelect: EventHandler;\r\n        onTimeRangeSelected: EventHandler;\r\n        onTimeRangeSelecting: EventHandler;\r\n\r\n        allowEventOverlap: boolean;\r\n        allowMultiSelect: boolean;\r\n        api: number;\r\n        autoRefreshCommand: string;\r\n        autoRefreshEnabled: boolean;\r\n        autoRefreshInterval: number;\r\n        autoRefreshMaxCount: number;\r\n        autoScroll: \"Drag\" | \"Always\" | \"Disabled\";\r\n        backendUrl: string;\r\n        blockOnCallBack: boolean;\r\n        bubble: DayPilot.Bubble | string;\r\n        businessBeginsHour: number;\r\n        businessEndsHour: number;\r\n        cellBubble: DayPilot.Bubble | string;\r\n        cellDuration: number;\r\n        cellGroupBy: GroupBy;\r\n        cellSweeping: boolean;\r\n        cellSweepingCacheSize: number;\r\n        cellWidth: number;\r\n        cellWidthMin: number;\r\n        cellWidthSpec: \"Auto\" | \"Fixed\";\r\n        clientState: any;\r\n        contextMenu: DayPilot.Menu | string;\r\n        contextMenuResource: DayPilot.Menu | string;\r\n        contextMenuSelection: DayPilot.Menu | string;\r\n        cornerHtml: string;\r\n        crosshairColor: string;\r\n        crosshairOpacity: number;\r\n        crosshairType: \"Full\" | \"Header\" | \"Disabled\";\r\n        days: number;\r\n        doubleClickTimeout: number;\r\n        dragOutAllowed: boolean;\r\n        drawBlankCells: boolean;\r\n        durationBarHeight: number;\r\n        durationBarVisible: boolean;\r\n        dynamicEventRendering: boolean;\r\n        dynamicEventRenderingCacheSize: number;\r\n        dynamicEventRenderingCacheSweeping: boolean;\r\n        dynamicEventRenderingMargin: number;\r\n        dynamicLoading: boolean;\r\n        eventClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\" | \"Edit\" | \"Select\" | \"ContextMenu\" | \"Bubble\";\r\n        eventDeleteHandling: \"Update\" | \"Disabled\" | \"CallBack\";\r\n        eventDoubleClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\" | \"Edit\" | \"Select\" | \"ContextMenu\" | \"Bubble\";\r\n        eventEditHandling: \"Disabled\" | \"Update\" | \"CallBack\";\r\n        eventEndSpec: \"DateTime\" | \"Date\";\r\n        eventHeight: number;\r\n        eventHoverHandling: \"Bubble\" | \"Disabled\";\r\n        eventMoveHandling: \"Update\" | \"Disabled\" | \"CallBack\" | \"Notify\";\r\n        eventMoveMargin: number;\r\n        eventMoveToPosition: boolean;\r\n        eventResizeHandling: \"Update\" | \"Disabled\" | \"CallBack\" | \"Notify\";\r\n        eventResizeMargin: number;\r\n        eventRightClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\" | \"Edit\" | \"Select\" | \"ContextMenu\" | \"Bubble\";\r\n        eventSelectHandling: \"Disabled\" | \"Update\" | \"CallBack\";\r\n        floatingEvents: boolean;\r\n        floatingTimeHeaders: boolean;\r\n        groupConcurrentEvents: boolean;\r\n        groupConcurrentEventsLimit: number;\r\n        headerHeight: number;\r\n        height: number;\r\n        heightSpec: \"Auto\" | \"Max\" | \"Fixed\" | \"Parent100Pct\" | \"Max100Pct\";\r\n        hideUntilInit: boolean;\r\n        initEventEnabled: boolean;\r\n        layout: \"DivBased\" | \"TableBased\";\r\n        loadingLabelText: string;\r\n        loadingLabelVisible: boolean;\r\n        locale: string;\r\n        messageBarPosition: \"Top\" | \"Bottom\";\r\n        messageHideAfter: number;\r\n        moveBy: \"Full\" | \"Top\" | \"Left\";\r\n        multiMoveVerticalMode: \"Disabled\" | \"Master\" | \"All\";\r\n        notifyCommit: \"Immediate\" | \"Queue\";\r\n        overrideWheelScrolling: boolean;\r\n        progressiveRowRendering: boolean;\r\n        progressiveRowRenderingPreload: number;\r\n        resourceBubble: DayPilot.Bubble;\r\n        resourceCollapseHandling: \"Enabled\" | \"CallBack\";\r\n        resourceExpandHandling: \"Enabled\" | \"CallBack\";\r\n        rowClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\" | \"Edit\" | \"Select\";\r\n        rowHeaderColumns: { title: string, width?: number}[];\r\n        rowHeaderScrolling: boolean;\r\n        rowHeaderWidth: number;\r\n        rowMarginBottom: number;\r\n        rowMarginTop: number;\r\n        rowMinHeight: number;\r\n        rowMoveHandling: \"Disabled\" | \"Update\" | \"CallBack\" | \"Notify\";\r\n        scale: \"Manual\" | \"CellDuration\" | \"Minute\" | \"Hour\" | \"Day\" | \"Week\" | \"Month\" | \"Year\";\r\n        scrollX: number;\r\n        scrollY: number;\r\n        separators: SeparatorData[];\r\n        showNonBusiness: boolean;\r\n        showToolTip: boolean;\r\n        snapToGrid: boolean;\r\n        sortDirections: SortDirection[];\r\n        startDate: DayPilot.Date | string;\r\n        syncResourceTree: boolean;\r\n        tapAndHoldTimeout: number;\r\n        theme: string;\r\n        timeFormat: \"Auto\" | \"Clock12Hours\" | \"Clock24Hours\";\r\n        timeHeaders: TimeHeaderData[];\r\n        timeline: TimelineData[];\r\n        timeRangeDoubleClickHandling: \"Disabled\" | \"Enabled\" | \"CallBack\";\r\n        timeRangeSelectedHandling: \"Enabled\" | \"Disabled\" | \"CallBack\";\r\n        treeAutoExpand: boolean;\r\n        treeEnabled: boolean;\r\n        treeImageMarginLeft: number;\r\n        treeImageMarginTop: number;\r\n        treeIndent: number;\r\n        treePreventParentUsage: boolean;\r\n        useEventBoxes: \"Always\" | \"Never\" | \"ShortEventsOnly\";\r\n        viewType: \"Days\" | \"Resources\" | \"Gantt\";\r\n        weekStarts: \"Auto\" | number;\r\n        width: number;\r\n    }\r\n\r\n    namespace Scheduler {\r\n        function makeDraggable(options: any): void;\r\n    }\r\n\r\n    class Calendar {\r\n        constructor(id: string, options?: any);\r\n\r\n        onAfterRender: EventHandler;\r\n        onAfterEventRender: EventHandler;\r\n        onAjaxError: EventHandler;\r\n        onBeforeCellRender: EventHandler;\r\n        onBeforeHeaderRender: EventHandler;\r\n        onBeforeTimeHeaderRender: EventHandler;\r\n        onBeforeEventRender: EventHandler;\r\n        onEventClick: EventHandler;\r\n        onEventClicked: EventHandler;\r\n        onEventDoubleClick: EventHandler;\r\n        onEventDoubleClicked: EventHandler;\r\n        onEventEdit: EventHandler;\r\n        onEventEdited: EventHandler;\r\n        onEventRightClick: EventHandler;\r\n        onEventRightClicked: EventHandler;\r\n        onEventDelete: EventHandler;\r\n        onEventDeleted: EventHandler;\r\n        onEventMove: EventHandler;\r\n        onEventMoved: EventHandler;\r\n        onEventResize: EventHandler;\r\n        onEventResized: EventHandler;\r\n        onEventSelect: EventHandler;\r\n        onEventSelected: EventHandler;\r\n        onHeaderClick: EventHandler;\r\n        onHeaderClicked: EventHandler;\r\n        onTimeRangeSelect: EventHandler;\r\n        onTimeRangeSelected: EventHandler;\r\n        onTimeRangeDoubleClick: EventHandler;\r\n        onTimeRangeDoubleClicked: EventHandler;\r\n\r\n        init(): void;\r\n        show(): void;\r\n        hide(): void;\r\n        dispose(): void;\r\n        update(): void;\r\n        exportAs(format?: \"svg\" | \"png\" | \"jpeg\", options?: any): Export;\r\n\r\n        events: {\r\n            list: EventData[];\r\n\r\n            add(e: DayPilot.Event): void;\r\n            find(id: string): DayPilot.Event;\r\n            findRecurrent(masterId: string, time: DayPilot.Date | string): DayPilot.Event;\r\n            load(url: string,\r\n                 success: {(args: { data: any; preventDefault(): void; } ):void},\r\n                 error: {(args: { request: XMLHttpRequest, exception: any; } ):void}\r\n            ): void;\r\n            remove(e: DayPilot.Event): void;\r\n            update(e: DayPilot.Event): void;\r\n        };\r\n\r\n        multiselect: {\r\n            add(e: DayPilot.Event, dontRedraw?: boolean): void;\r\n            clear(dontRedraw?: boolean): void;\r\n            events(): DayPilot.Event[];\r\n            redraw(): void;\r\n            remove(e: DayPilot.Event, dontRedraw?: boolean): void;\r\n        };\r\n\r\n        message(msg: string, options?: { delay?: number, cssClass?: string }): void;\r\n\r\n        clearSelection(): void;\r\n        getSelection(): { start: DayPilot.Date, end: DayPilot.Date, resource: string};\r\n\r\n        visibleStart(): DayPilot.Date;\r\n        visibleEnd(): DayPilot.Date;\r\n\r\n        allDayEnd: \"DateTime\" | \"Date\";\r\n        allDayEventHeight: number;\r\n        allowMultiSelect: boolean;\r\n        api: number;\r\n        autoRefreshCommand: string;\r\n        autoRefreshEnabled: boolean;\r\n        autoRefreshInterval: number;\r\n        autoRefreshMaxCount: number;\r\n        backendUrl: string;\r\n        bubble: DayPilot.Bubble | string;\r\n        businessBeginsHour: number;\r\n        businessEndsHour: number;\r\n        cellDuration: number;\r\n        cellHeight: number;\r\n        clientState: any;\r\n        columnBubble: DayPilot.Bubble | string;\r\n        columnMarginRight: number;\r\n        columns: CalendarColumnData[];\r\n        contextMenu: DayPilot.Menu | string;\r\n        contextMenuSelection: DayPilot.Menu | string;\r\n        cornerHtml: string;\r\n        crosshairColor: string;\r\n        crosshairOpacity: number;\r\n        crosshairType: \"Header\" | \"Full\";\r\n        dayBeginsHour: number;\r\n        dayEndsHour: number;\r\n        days: number;\r\n        doubleClickTimeout: number;\r\n        durationBarVisible: boolean;\r\n        durationBarWidth: number;\r\n        eventArrangement: \"SideBySide\" | \"Cascade\" | \"Full\";\r\n        eventClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\" | \"Edit\" | \"Select\" | \"ContextMenu\" | \"Bubble\";\r\n        eventDeleteHandling: \"Update\" | \"Disabled\" | \"CallBack\";\r\n        eventDoubleClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\" | \"Edit\" | \"Select\" | \"Bubble\";\r\n        eventEditHandling: \"Update\" | \"CallBack\";\r\n        eventHoverHandling: \"Bubble\" | \"Disabled\";\r\n        eventMoveHandling: \"Update\" | \"CallBack\" | \"Notify\" | \"Disabled\";\r\n        eventResizeHandling: \"Update\" | \"CallBack\" | \"Notify\" | \"Disabled\";\r\n        eventRightClickHandling: \"ContextMenu\" | \"Disabled\" | \"CallBack\" | \"Bubble\";\r\n        eventSelectHandling: \"Update\" | \"CallBack\" | \"Disabled\";\r\n        eventTapAndHoldHandling: \"Move\" | \"ContextMenu\";\r\n        headerClickHandling: \"Enabled\" | \"CallBack\";\r\n        headerDateFormat: string;\r\n        headerHeight: number;\r\n        headerLevels: number;\r\n        height: number;\r\n        heightSpec: \"BusinessHours\" | \"BusinessHoursNoScroll\" | \"Fixed\" | \"Auto\";\r\n        hideFreeCells: boolean;\r\n        hideUntilInit: boolean;\r\n        hourWidth: number;\r\n        initScrollPos: number;\r\n        loadingLabelText: string;\r\n        loadingLabelVisible: boolean;\r\n        locale: string;\r\n        messageHideAfter: number;\r\n        moveBy: \"Full\" | \"Left\" | \"Top\" | \"Disabled\" | \"None\";\r\n        notifyCommit: \"Immediate\" | \"Queue\";\r\n        rtl: boolean;\r\n        showAllDayEvents: boolean;\r\n        showAllDayEventStartEnd: boolean;\r\n        showCurrentTime: boolean;\r\n        showCurrentTimeMode: \"Day\" | \"Full\";\r\n        showCurrentTimeOffset: number;\r\n        showHeader: boolean;\r\n        showHours: boolean;\r\n        showToolTip: boolean;\r\n        sortDirections: SortDirection[];\r\n        startDate: DayPilot.Date | string;\r\n        timeFormat: \"Auto\" | \"Clock12Hours\" | \"Clock24Hours\";\r\n        timeHeaderCellDuration: number;\r\n        timeRangeDoubleClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\";\r\n        timeRangeSelectedHandling: \"Enabled\" | \"Disabled\" | \"CallBack\";\r\n        useEventBoxes: \"Always\" | \"Never\" | \"ShortEventsOnly\";\r\n        viewType: \"Days\" | \"Resources\";\r\n        width: string;\r\n    }\r\n\r\n    class Month {\r\n        constructor(id: string, options?: any);\r\n\r\n        onAjaxError: EventHandler;\r\n        onAfterEventRender: EventHandler;\r\n        onAfterRender: EventHandler;\r\n        onBeforeCellRender: EventHandler;\r\n        onBeforeEventRender: EventHandler;\r\n        onBeforeHeaderRender: EventHandler;\r\n        onEventClick: EventHandler;\r\n        onEventClicked: EventHandler;\r\n        onEventDoubleClick: EventHandler;\r\n        onEventDoubleClicked: EventHandler;\r\n        onEventSelect: EventHandler;\r\n        onEventSelected: EventHandler;\r\n        onEventRightClick: EventHandler;\r\n        onEventRightClicked: EventHandler;\r\n        onEventMove: EventHandler;\r\n        onEventMoved: EventHandler;\r\n        onEventResize: EventHandler;\r\n        onEventResized: EventHandler;\r\n        onTimeRangeSelect: EventHandler;\r\n        onTimeRangeSelected: EventHandler;\r\n        onHeaderClick: EventHandler;\r\n        onHeaderClicked: EventHandler;\r\n        onTimeRangeDoubleClick: EventHandler;\r\n        onTimeRangeDoubleClicked: EventHandler;\r\n\r\n        allowMultiSelect: boolean;\r\n        autoRefreshEnabled: boolean;\r\n        autoRefreshCommand: string;\r\n        autoRefreshInterval: number;\r\n        autoRefreshMaxCount: number;\r\n        backendUrl: string;\r\n        bubble: DayPilot.Bubble | string;\r\n        cellHeaderHeight: number;\r\n        cellHeight: number;\r\n        cellMarginBottom: number;\r\n        cellMode: boolean;\r\n        clientState: any;\r\n        contextMenu: DayPilot.Menu | string;\r\n        eventClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\" | \"Select\" | \"ContextMenu\" | \"Bubble\";\r\n        eventDoubleClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\" | \"Select\" | \"Bubble\";\r\n        eventEndTime: boolean;\r\n        eventHeight: number;\r\n        eventMoveHandling: \"Update\" | \"CallBack\" | \"Notify\" | \"Disabled\";\r\n        eventMoveToPosition: boolean;\r\n        eventResizeHandling: \"Update\" | \"CallBack\" | \"Notify\" | \"Disabled\";\r\n        eventRightClickHandling: \"ContextMenu\" | \"Enabled\" | \"Disabled\" | \"CallBack\" | \"Bubble\";\r\n        eventSelectHandling: \"Update\" | \"CallBack\" | \"Disabled\";\r\n        eventStartTime: boolean;\r\n        events : {\r\n            list: EventData[];\r\n            add(e: DayPilot.Event): void;\r\n            find(id: string): DayPilot.Event;\r\n            findRecurrent(masterId: string, time: DayPilot.Date | string): DayPilot.Event;\r\n            forRange(start: DayPilot.Date | string, end: DayPilot.Date | string): DayPilot.Event[];\r\n            remove(e: DayPilot.Event): void;\r\n            update(e: DayPilot.Event): void;\r\n        };\r\n        headerClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\";\r\n        headerHeight: number;\r\n        hideUntilInit: boolean;\r\n        lineSpace: number;\r\n        locale: string;\r\n        messageHideAfter: number;\r\n        notifyCommit: \"Immediate\" | \"Queue\";\r\n        showWeekend: boolean;\r\n        showToolTip: boolean;\r\n        startDate: DayPilot.Date | string;\r\n        theme: string;\r\n        timeFormat: \"Auto\" | \"Clock12Hours\" | \"Clock24Hours\";\r\n        timeRangeDoubleClickHandling: \"Enabled\" | \"Disabled\" | \"CallBack\";\r\n        timeRangeSelectedHandling: \"Enabled\" | \"Disabled\" | \"CallBack\";\r\n        viewType: \"Month\" | \"Weeks\";\r\n        weekStarts: \"Auto\" | number;\r\n        weeks: number;\r\n        width: string;\r\n\r\n\r\n        clearSelection(): void;\r\n        dispose(): void;\r\n        hide(): void;\r\n        init(): void;\r\n        exportAs(format?: \"svg\" | \"png\" | \"jpeg\", options?: any): Export;\r\n\r\n        message(msg: string, options?: { delay?: number, cssClass?: string }): void;\r\n\r\n        multiselect: {\r\n            add(e: DayPilot.Event, dontRedraw?: boolean): void;\r\n            clear(dontRedraw?: boolean): void;\r\n            events(): DayPilot.Event[];\r\n            redraw(): void;\r\n            remove(e: DayPilot.Event): void;\r\n        };\r\n\r\n        show(): void;\r\n        update(): void;\r\n        visibleStart(): DayPilot.Date;\r\n        visibleEnd(): DayPilot.Date;\r\n    }\r\n\r\n    class Kanban {\r\n        constructor(id: string, options?: any);\r\n\r\n        onCardClick: EventHandler;\r\n        onCardClicked: EventHandler;\r\n        onCardDelete: EventHandler;\r\n        onCardDeleted: EventHandler;\r\n        onCardMove: EventHandler;\r\n        onCardMoved: EventHandler;\r\n        onColumnMove: EventHandler;\r\n        onColumnMoved: EventHandler;\r\n        onHeightChanged: EventHandler;\r\n        onSwimlaneMove: EventHandler;\r\n        onSwimlaneMoved: EventHandler;\r\n\r\n        barWidth: number;\r\n        cardDeleteHandling: \"Disabled\" | \"Update\";\r\n        cardMarginBottom: number;\r\n        cardMarginLeft: number;\r\n        cardMarginRight: number;\r\n        cardMoveHandling: \"Update\" | \"Disabled\";\r\n        cards: {\r\n            list: CardData[];\r\n            add(c: DayPilot.Card): void;\r\n            remove(c: DayPilot.Card): void;\r\n            update(c: DayPilot.Card): void;\r\n        };\r\n        cellMarginBottom: number;\r\n        cellMarginTop: number;\r\n        columnHeaderHeight: number;\r\n        columnMoveHandling: \"Disabled\" | \"Update\";\r\n        columns: {\r\n            list: KanbanColumnData[];\r\n        };\r\n        crosshairColor: string;\r\n        height: number;\r\n        heightSpec: \"Auto\" | \"Max\" | \"Fixed\" | \"Parent100Pct\";\r\n        rowMinHeight: number;\r\n        swimlaneCollapsingEnabled: boolean;\r\n        swimlaneHeaderWidth: number;\r\n        swimlaneMoveHandling: \"Disabled\" | \"Update\";\r\n        swimlanes : {\r\n            list: SwimlaneData[];\r\n        };\r\n        theme: string;\r\n        visible: boolean;\r\n\r\n\r\n        hide(): void;\r\n        init(): void;\r\n        dispose(): void;\r\n        message(msg: string, options?: { delay?: number, cssClass?: string }): void;\r\n        show(): void;\r\n        update(): void;\r\n    }\r\n\r\n    class Gantt {\r\n        constructor(id: string, options?: any);\r\n\r\n        onAfterRender: EventHandler;\r\n        onBeforeCellRender: EventHandler;\r\n        onBeforeRowHeaderRender: EventHandler;\r\n        onBeforeTaskRender: EventHandler;\r\n        onBeforeTimeHeaderRender: EventHandler;\r\n        onColumnResized: EventHandler;\r\n        onLinkCreate: EventHandler;\r\n        onLinkCreated: EventHandler;\r\n        onRowClick: EventHandler;\r\n        onRowClicked: EventHandler;\r\n        onRowDoubleClick: EventHandler;\r\n        onRowDoubleClicked: EventHandler;\r\n        onRowEdit: EventHandler;\r\n        onRowEdited: EventHandler;\r\n        onRowMove: EventHandler;\r\n        onRowMoved: EventHandler;\r\n        onRowMoving: EventHandler;\r\n        onRowSelect: EventHandler;\r\n        onRowSelected: EventHandler;\r\n        onTaskClick: EventHandler;\r\n        onTaskClicked: EventHandler;\r\n        onTaskDoubleClick: EventHandler;\r\n        onTaskDoubleClicked: EventHandler;\r\n        onTaskMove: EventHandler;\r\n        onTaskMoved: EventHandler;\r\n        onTaskMoving: EventHandler;\r\n        onTaskResize: EventHandler;\r\n        onTaskResized: EventHandler;\r\n        onTaskResizing: EventHandler;\r\n        onTaskRightClick: EventHandler;\r\n        onTaskRightClicked: EventHandler;\r\n\r\n        commandCallBack(command: string, data?: any): void;\r\n        init(): void;\r\n        dispose(): void;\r\n        links: {\r\n            list: LinkData[];\r\n            add(link: DayPilot.Link): void;\r\n            find(id: string): DayPilot.Link;\r\n            remove(link: DayPilot.Link): void;\r\n        };\r\n        message(html: string): void;\r\n        rows: {\r\n            selection: {\r\n                add(task: DayPilot.Task): void;\r\n                clear(): void;\r\n                get(): DayPilot.Task[];\r\n            };\r\n        };\r\n        scrollTo(date: DayPilot.Date, animated?: \"fast\" | \"normal\" | \"slow\" | \"linear\" | number, position?: \"left\" | \"middle\" | \"right\"): void;\r\n        scrollTo(date: string, animated?: \"fast\" | \"normal\" | \"slow\" | \"linear\" | number, position?: \"left\" | \"middle\" | \"right\"): void;\r\n        scrollTo(pixels: number, animated?: \"fast\" | \"normal\" | \"slow\" | \"linear\" | number, position?: \"left\" | \"middle\" | \"right\"): void;\r\n        setHeight(pixels: number): void;\r\n        startDate: DayPilot.Date | string;\r\n        days: number;\r\n        tasks: {\r\n            list: TaskData[];\r\n            add(task: DayPilot.Task): void;\r\n            find(id: string): DayPilot.Task;\r\n            remove(task: DayPilot.Task): void;\r\n            update(task: DayPilot.Task): void;\r\n        };\r\n        update(): void;\r\n    }\r\n\r\n    class Navigator {\r\n        constructor(id: string, options?: any);\r\n\r\n        onAjaxError: EventHandler;\r\n        onBeforeCellRender: EventHandler;\r\n        onTimeRangeSelect: EventHandler;\r\n        onTimeRangeSelected: EventHandler;\r\n        onVisibleRangeChange: EventHandler;\r\n        onVisibleRangeChanged: EventHandler;\r\n\r\n        bound: string;\r\n        cellHeight: number;\r\n        cellWidth: number;\r\n        command: string;\r\n        dayHeaderHeight: number;\r\n        events: {\r\n            list: EventDataShort[];\r\n        };\r\n        locale: string;\r\n        orientation: \"Vertical\" | \"Horizontal\";\r\n        rowsPerMonth: \"Auto\" | \"Six\";\r\n        selectionDay: DayPilot.Date;\r\n        selectionEnd: DayPilot.Date;\r\n        selectionStart: DayPilot.Date;\r\n        selectMode: \"day\" | \"week\" | \"month\" | \"none\";\r\n        showMonths: number;\r\n        showWeekNumbers: boolean;\r\n        skipMonths: number;\r\n        startDate: DayPilot.Date | string;\r\n        theme: string;\r\n        titleHeight: number;\r\n        weekStarts: \"Auto\" | number;\r\n        weekNumberAlgorithm: \"Auto\" | \"US\" | \"ISO8601\";\r\n        timeRangeSelectedHandling: \"Bind\" | \"None\";\r\n        visibleRangeChangedHandling: \"Enabled\" | \"Disabled\" | \"CallBack\";\r\n\r\n        init(): void;\r\n        dispose(): void;\r\n        update(): void;\r\n        select(date: DayPilot.Date | string): void;\r\n        hide(): void;\r\n        show(): void;\r\n        visibleEnd(): DayPilot.Date;\r\n        visibleStart(): DayPilot.Date;\r\n    }\r\n\r\n    class Bubble {\r\n        constructor(options?: any);\r\n\r\n        onLoad: EventHandler;\r\n\r\n        showEvent(e: DayPilot.Event): void;\r\n        showHtml(html: string, div?: HTMLElement): void;\r\n\r\n        animated: boolean;\r\n        animation: \"fast\" | \"slow\" | \"jump\";\r\n        hideAfter: number;\r\n        loadingText: number;\r\n        position: \"EventTop\" | \"Mouse\";\r\n        showAfter: number;\r\n        showLoadingLabel: boolean;\r\n        theme: string;\r\n        zIndex: number;\r\n    }\r\n\r\n    class Locale {\r\n        constructor(id: string, properties: {\r\n            dayNames: string[];\r\n            dayNamesShort: string[];\r\n            monthNames: string[];\r\n            timePattern: string;\r\n            datePattern: string;\r\n            dateTimePattern: string;\r\n            timeFormat: \"Clock12Hours\" | \"Clock24Hours\";\r\n            weekStarts: number;\r\n        });\r\n\r\n        datePattern: string;\r\n        dateTimePattern: string;\r\n        dayNames: string[];\r\n        dayNamesShort: string[];\r\n        monthNames: string[];\r\n        monthNamesShort: string[];\r\n        timeFormat: \"Clock12Hours\" | \"Clock24Hours\";\r\n        timePattern: string;\r\n        weekStarts: number;\r\n    }\r\n\r\n    namespace Locale {\r\n        function register(locale: DayPilot.Locale): void;\r\n    }\r\n\r\n    class Menu {\r\n        constructor(options?: {\r\n            hideOnMouseOut?: boolean;\r\n            items?: MenuItemData[];\r\n            menuTitle?: string;\r\n            onShow?: EventHandler;\r\n            showMenuTitle?: boolean;\r\n            zIndex?: number;\r\n            theme?: string;\r\n        });\r\n\r\n        //className: string;\r\n        hideOnMouseOut: boolean;\r\n        items: MenuItemData[];\r\n        menuTitle: string;\r\n        showMenuTitle: boolean;\r\n        zIndex: number;\r\n        theme: string;\r\n\r\n        show(target?: any): void;\r\n    }\r\n\r\n    class MenuBar {\r\n        constructor(id: string, options?: any);\r\n        items: any[];\r\n        init(): void;\r\n    }\r\n\r\n    class Date {\r\n        constructor(str?: string | DayPilot.Date);\r\n        constructor(date: GlobalDate, isLocal?: boolean);\r\n\r\n        addDays(days: number): DayPilot.Date;\r\n        addHours(hours: number): DayPilot.Date;\r\n        addMilliseconds(millis: number): DayPilot.Date;\r\n        addMinutes(minutes: number): DayPilot.Date;\r\n        addMonths(months: number): DayPilot.Date;\r\n        addSeconds(seconds: number): DayPilot.Date;\r\n        addTime(ticks: number): DayPilot.Date;\r\n        addTime(duration: DayPilot.Duration): DayPilot.Date;\r\n        addYears(years: number): DayPilot.Date;\r\n        dayOfWeek(): number;\r\n        dayOfYear(): number;\r\n        daysInMonth(): number;\r\n        daysInYear(): number;\r\n        equals(another: DayPilot.Date): boolean;\r\n        firstDayOfMonth(): DayPilot.Date;\r\n        firstDayOfWeek(): DayPilot.Date;\r\n        firstDayOfYear(): DayPilot.Date;\r\n        getDatePart(): DayPilot.Date;\r\n        getDay(): number;\r\n        getDayOfWeek(): number;\r\n        getYear(): number;\r\n        getHours(): number;\r\n        getMilliseconds(): number;\r\n        getMinutes(): number;\r\n        getMonth(): number;\r\n        getSeconds(): number;\r\n        getTime(): number;\r\n        getTimePart(): number;\r\n        getTotalTicks(): number;\r\n        getYear(): number;\r\n        lastDayOfMonth(): DayPilot.Date;\r\n        toDateLocal(): GlobalDate;\r\n        toString(pattern?: string, locale?: string | DayPilot.Locale): string;\r\n        toStringSortable(): string;\r\n        weekNumber(): number;\r\n        weekNumberISO(): number;\r\n    }\r\n\r\n    namespace Date {\r\n        function today(): DayPilot.Date;\r\n        function fromYearMonthDay(year: number, month: number, day: number): DayPilot.Date;\r\n        function parse(input: string, pattern: string, locale?: string | DayPilot.Locale): DayPilot.Date;\r\n        function today(): DayPilot.Date;\r\n        namespace Cache {\r\n            function clear(): void;\r\n        }\r\n    }\r\n\r\n    namespace Util {\r\n        function overlaps(start1: DayPilot.Date, end1: DayPilot.Date, start2: DayPilot.Date, end2: DayPilot.Date);\r\n        function overlaps(start1: number, end1: number, start2: number, end2: number);\r\n    }\r\n\r\n    namespace Modal {\r\n        function prompt(message: string, defaultValue?: string, options?: any) : Promise;\r\n        function alert(message: string, options?: any) : Promise;\r\n        function confirm(message: string, options?: any) : Promise;\r\n    }\r\n\r\n    class Promise {\r\n        constructor(f: (onFulfilled: (...args: any[]) => void, onRejected?: (...args: any[]) => void) => void);\r\n        then(onFulfilled: (...args: any[]) => void, onRejected?: (...args: any[]) => void): Promise;\r\n        catch(onRejected: (...args: any[]) => void): Promise;\r\n    }\r\n\r\n    class Duration {\r\n\r\n        constructor(ticks: number);\r\n        constructor(start: DayPilot.Date, end: DayPilot.Date);\r\n\r\n        ticks: number;\r\n        toString(pattern?:string): string;\r\n\r\n        totalSeconds(): number;\r\n        totalMinutes(): number;\r\n        totalHours(): number;\r\n        totalDays(): number;\r\n\r\n        milliseconds(): number;\r\n        seconds(): number;\r\n        minutes(): number;\r\n        hours(): number;\r\n        days(): number;\r\n    }\r\n\r\n    namespace Duration {\r\n        function weeks(i: number): DayPilot.Duration;\r\n        function days(i: number): DayPilot.Duration;\r\n        function hours(i: number): DayPilot.Duration;\r\n        function minutes(i: number): DayPilot.Duration;\r\n        function seconds(i: number): DayPilot.Duration;\r\n    }\r\n\r\n    class Event {\r\n        constructor(data: EventData);\r\n        data: any;\r\n\r\n        start(): DayPilot.Date;\r\n        start(newStart: DayPilot.Date): void;\r\n\r\n        end(): DayPilot.Date;\r\n        end(newEnd: DayPilot.Date): void;\r\n\r\n        id(): string;\r\n\r\n        text(): string;\r\n        text(newText: string): void;\r\n\r\n        resource(): string;\r\n        resource(newResource: string): void;\r\n\r\n        duration(): DayPilot.Duration;\r\n    }\r\n\r\n    class Task {\r\n        constructor(data: TaskData);\r\n\r\n        data: TaskData;\r\n\r\n        id(): string | number;\r\n        id(newId: string): void;\r\n\r\n        text(): string;\r\n        text(newText: string): void;\r\n\r\n        start(): DayPilot.Date;\r\n        start(newStart: DayPilot.Date | string): void;\r\n\r\n        end(): DayPilot.Date;\r\n        end(newEnd: DayPilot.Date | string): void;\r\n\r\n        complete(): number;\r\n        complete(newComplete: number): void;\r\n\r\n        type(): TaskType;\r\n        type(newType: TaskType): void;\r\n\r\n        children(): DayPilot.Task[];\r\n\r\n        row: {\r\n            expand(): void;\r\n            expanded(): boolean;\r\n            collapse(): void;\r\n            toggle(): void;\r\n        }\r\n    }\r\n\r\n    class Card {\r\n        constructor(data: CardData);\r\n        data: CardData;\r\n    }\r\n\r\n    class Link {\r\n        constructor(data: LinkData);\r\n        data: LinkData;\r\n    }\r\n\r\n    class Row {\r\n        addClass(className: string): void;\r\n        children(): DayPilot.Row[];\r\n        parent(): DayPilot.Row;\r\n        remove(): void;\r\n        collapse(): void;\r\n        column(i: number): RowHeaderColumn;\r\n        expand(): void;\r\n        removeClass(className: string): void;\r\n        toggle(): void;\r\n        events: {\r\n            all(): DayPilot.Event[];\r\n            totalDuration(): number;\r\n        };\r\n        cells: {\r\n            all(): CellArray;\r\n        };\r\n        groups: {\r\n            all(): EventGroup[];\r\n            collapseAll(): void;\r\n            collapsed(): EventGroup[];\r\n            expandAll(): void;\r\n            expanded(): EventGroup[];\r\n        };\r\n\r\n        id: string;\r\n        name: string;\r\n        start: DayPilot.Date;\r\n        data: any;\r\n    }\r\n\r\n    class Export {\r\n        toElement(): HTMLElement;\r\n        toHtml(): string;\r\n        toDataUri(): string;\r\n        toBlob(): Blob;\r\n        print(options?: any): void;\r\n        download(filename?: string): void;\r\n        dimensions(): { width: number, height: number };\r\n    }\r\n\r\n    interface CardData {\r\n        id: string | number;\r\n        name: string;\r\n        text?: string;\r\n        html?: string;\r\n        column: string | number;\r\n        swimlane?: string | number;\r\n        barColor?: string;\r\n    }\r\n\r\n    interface KanbanColumnData {\r\n        id: string | number;\r\n        name: string;\r\n        barColor?: string;\r\n    }\r\n\r\n    interface SwimlaneData {\r\n        id: string | number;\r\n        name: string;\r\n        collapsed?: boolean;\r\n    }\r\n\r\n    interface RowHeaderColumn {\r\n        html(newHtml?: string): string | void;\r\n    }\r\n\r\n    interface EventGroup {\r\n        expand(): void;\r\n        collapse(): void;\r\n    }\r\n\r\n    interface CalendarColumnData {\r\n        name: string;\r\n        id?: string;\r\n        start?: DayPilot.Date | string;\r\n        html?: string;\r\n        toolTip?: string;\r\n        children?: CalendarColumnData[];\r\n    }\r\n\r\n    type GroupBy = \"Hour\" | \"Day\" | \"Week\" | \"Month\"  | \"Quarter\" | \"Year\" | \"Cell\" | \"None\";\r\n    type SortDirection = \"asc\" | \"desc\";\r\n    type TaskType = \"Task\" | \"Milestone\" | \"Group\";\r\n    type LinkType = \"FinishToStart\" | \"FinishToFinish\" | \"StartToStart\" | \"StartToFinish\";\r\n\r\n    interface TimelineData {\r\n        start: DayPilot.Date | string;\r\n        end: DayPilot.Date | string;\r\n        width?: number;\r\n    }\r\n\r\n    interface TimeHeaderData {\r\n        groupBy: GroupBy;\r\n        format?: string;\r\n    }\r\n\r\n    interface MenuItemData {\r\n        text: string;\r\n        href?: string;\r\n        onclick?: {():void};\r\n        onClick?: EventHandler;\r\n        command?: string;\r\n        action?: \"CallBack\" | \"PostBack\";\r\n        disabled?: boolean;\r\n        image?: string;\r\n        cssClass?: string;\r\n    }\r\n\r\n    interface EventHandler {\r\n        (args?: any): void;\r\n    }\r\n\r\n    interface SeparatorData {\r\n        location: DayPilot.Date | string;\r\n        color?: string;\r\n        layer?: \"AboveEvents\" | \"BelowEvents\";\r\n        opacity?: number;\r\n        width?: number;\r\n    }\r\n\r\n    interface CellArray extends Array<Cell> {\r\n        addClass(className: string): CellArray;\r\n        removeClass(className: string): CellArray;\r\n        html(html: string): CellArray;\r\n        invalidate(): CellArray;\r\n    }\r\n\r\n    interface Cell {\r\n        start: DayPilot.Date;\r\n        end: DayPilot.Date;\r\n        resource: string;\r\n        isParent: boolean;\r\n        update(): void;\r\n        utilization(name?: string): number;\r\n        events(): DayPilot.Event[];\r\n        div: HTMLElement;\r\n        properties: any;\r\n    }\r\n\r\n    interface EventDataShort {\r\n        start: string | DayPilot.Date;\r\n        end: string | DayPilot.Date;\r\n    }\r\n\r\n    interface EventData {\r\n        start: string | DayPilot.Date;\r\n        end: string | DayPilot.Date;\r\n        id: string | number;\r\n        text: string;\r\n        resource?: string | number;\r\n\r\n        areas?: AreaData[];\r\n        backColor?: string;\r\n        backImage?: string;\r\n        backRepeat?: string;\r\n        borderColor?: string;\r\n        bubbleHtml?: string;\r\n        clickDisabled?: boolean;\r\n        contextMenu?: DayPilot.Menu | string;\r\n        cssClass?: string;\r\n        deleteDisabled?: boolean;\r\n        doubleClickDisabled?: boolean;\r\n        fontColor?: string;\r\n        hidden?: boolean;\r\n        html?: string;\r\n        moveDisabled?: boolean;\r\n        recurrent?: boolean;\r\n        recurrentMasterId?: boolean;\r\n        resizeDisabled?: boolean;\r\n        rightClickDisabled?: boolean;\r\n        sort?: string[];\r\n        tags?: any;\r\n        toolTip?: string;\r\n\r\n        // scheduler\r\n        barBackColor?: string;\r\n        barColor?: string;\r\n        barHidden?: boolean;\r\n        complete?: number;\r\n        height?: number;\r\n        moveVDisabled?: boolean;\r\n        moveHDisabled?: boolean;\r\n    }\r\n\r\n    interface LinkData {\r\n        from: string;\r\n        to: string;\r\n        id?: string;\r\n        type?: LinkType;\r\n        width?: number;\r\n        color?: string;\r\n        style?: string;\r\n        cssClass?: string;\r\n        layer?: \"Above\" | \"Below\";\r\n    }\r\n\r\n    interface TaskData {\r\n        id: string;\r\n        text: string;\r\n        start: DayPilot.Date | string;\r\n        end?: DayPilot.Date | string;\r\n        type?: TaskType;\r\n        complete?: number;\r\n        children?: TaskData[];\r\n        tags: any;\r\n\r\n        box?: {\r\n            areas?: AreaData[];\r\n            backColor?: string;\r\n            backImage?: string;\r\n            backRepeat?: string;\r\n            barBackColor?: string;\r\n            barColor?: string;\r\n            barHidden?: boolean;\r\n            bubbleHtml?: string;\r\n            clickDisabled?: boolean;\r\n            contextMenu: DayPilot.Menu | string;\r\n            cssClass?: string;\r\n            doubleClickDisabled?: boolean;\r\n            html?: string;\r\n            htmlLeft?: string;\r\n            htmlRight?: string;\r\n            moveDisabled?: boolean;\r\n            resizeDisabled?: boolean;\r\n            rightClickDisabled?: boolean;\r\n            toolTip?: string;\r\n        };\r\n\r\n        row?: {\r\n            html?: string;\r\n            hidden?: boolean;\r\n            areas?: AreaData[];\r\n            toolTip?: string;\r\n            backColor?: string;\r\n            cssClass?: string;\r\n            contextMenu?: DayPilot.Menu | string;\r\n            collapsed?: boolean;\r\n            marginBottom?: number;\r\n            minHeight?: number;\r\n\r\n        };\r\n    }\r\n\r\n    interface ResourceData {\r\n        name: string;\r\n        id: string | number;\r\n\r\n        html?: string;\r\n        areas?: AreaData[];\r\n        toolTip?: string;\r\n        backColor?: string;\r\n        cssClass?: string;\r\n        contextMenu?: Menu | string;\r\n        dynamicChildren?: boolean;\r\n        expanded?: boolean;\r\n        children?: ResourceData[];\r\n        columns?: {html?: string; cssClass?: string; backColor?: string}[];\r\n        eventHeight?:number;\r\n    }\r\n\r\n    interface AreaData {\r\n        width?: number;\r\n        height?: number;\r\n        css?: string;\r\n        right?: number;\r\n        top?: number;\r\n        left?: number;\r\n        bottom?: number;\r\n        visibility?: \"Hover\" | \"Visible\";\r\n        html?: string;\r\n        id?: string | number;\r\n        start?: Date | string;\r\n        end?: Date | string;\r\n        menu: Menu | string;\r\n        js: {(args:any)} | string;\r\n        action: \"None\" | \"JavaScript\" | \"ContextMenu\" | \"HoverMenu\" | \"ResizeEnd\" | \"ResizeStart\" | \"Move\" | \"Bubble\";\r\n    }\r\n\r\n    function guid(): string;\r\n\r\n\r\n    /**\r\n     * Angular 2 components.\r\n     */\r\n    namespace Angular {\r\n\r\n        /**\r\n         * DayPilot Scheduler Angular 2 component.\r\n         */\r\n        class Scheduler {\r\n            constructor();\r\n\r\n            events: EventData[];\r\n            config: any;\r\n            control: DayPilot.Scheduler;\r\n        }\r\n\r\n        /**\r\n         * DayPilot Gantt Angular 2 component.\r\n         */\r\n        class Gantt {\r\n            constructor();\r\n\r\n            config: any;\r\n            control: DayPilot.Gantt;\r\n        }\r\n\r\n        /**\r\n         * DayPilot Calendar Angular 2 component.\r\n         */\r\n        class Calendar {\r\n            constructor();\r\n\r\n            events: EventData[];\r\n            config: any;\r\n            control: DayPilot.Calendar;\r\n        }\r\n\r\n        /**\r\n         * DayPilot Month Angular 2 component.\r\n         */\r\n        class Month {\r\n            constructor();\r\n\r\n            events: EventData[];\r\n            config: any;\r\n            control: DayPilot.Month;\r\n        }\r\n\r\n        /**\r\n         * DayPilot Kanban Angular 2 component.\r\n         */\r\n        class Kanban {\r\n            constructor();\r\n\r\n            config: any;\r\n            control: DayPilot.Kanban;\r\n        }\r\n\r\n        class Navigator {\r\n            constructor();\r\n\r\n            events: EventDataShort[];\r\n            config: any;\r\n            control: DayPilot.Navigator;\r\n\r\n            date: Date | string;\r\n        }\r\n\r\n        class Modal {\r\n            constructor();\r\n\r\n            autoFocus: boolean;\r\n\r\n            show(): void;\r\n            hide(result?:any): void;\r\n        }\r\n\r\n    }\r\n}\r\n/* Copyright 2005 - ${year} Annpoint, s.r.o.\r\n Use of this software is subject to license terms.\r\n http://www.daypilot.org/\r\n */\r\n\r\n//noinspection TypeScriptCheckImport\r\nimport { AfterViewInit, EventEmitter, OnInit, DoCheck, ElementRef, OnDestroy } from \"@angular/core\";\r\n\r\nexport declare class DayPilotSchedulerComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {\r\n    private _requestUpdate;\r\n    private _requestViewChange;\r\n    private _eventDiff;\r\n    private _visibleRange;\r\n    private _hashOptions;\r\n    private _eventsSet;\r\n    private _events;\r\n    private _id;\r\n    control: DayPilot.Scheduler;\r\n    viewChange: EventEmitter<DayPilot.Date>;\r\n    config: any;\r\n    events: DayPilot.EventData[];\r\n    readonly id: string;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    ngDoCheck(): void;\r\n    private dispose();\r\n    private updateOptions();\r\n    private updateEvents();\r\n}\r\nexport declare class DayPilotCalendarComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {\r\n    private _requestUpdate;\r\n    private _requestViewChange;\r\n    private _hashOptions;\r\n    private _hashEvents;\r\n    private _id;\r\n    control: DayPilot.Calendar;\r\n    viewChange: EventEmitter<DayPilot.Date>;\r\n    events: DayPilot.EventData[];\r\n    config: any;\r\n    readonly id: string;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    ngDoCheck(): void;\r\n    private dispose();\r\n    private updateOptions();\r\n    private updateEvents();\r\n}\r\nexport declare class DayPilotGanttComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {\r\n    private _requestUpdate;\r\n    private _hashOptions;\r\n    private _id;\r\n    control: DayPilot.Gantt;\r\n    config: any;\r\n    readonly id: string;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    ngDoCheck(): void;\r\n    private dispose();\r\n    private updateOptions();\r\n}\r\nexport declare class DayPilotMonthComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {\r\n    private _requestUpdate;\r\n    private _hashOptions;\r\n    private _hashEvents;\r\n    private _id;\r\n    control: DayPilot.Month;\r\n    events: DayPilot.EventData[];\r\n    config: any;\r\n    readonly id: string;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    ngDoCheck(): void;\r\n    private dispose();\r\n    private updateOptions();\r\n    private updateEvents();\r\n}\r\nexport declare class DayPilotKanbanComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {\r\n    private _requestUpdate;\r\n    private _hashOptions;\r\n    private _id;\r\n    control: DayPilot.Kanban;\r\n    config: any;\r\n    readonly id: string;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    ngDoCheck(): void;\r\n    private dispose();\r\n    private updateOptions();\r\n}\r\nexport declare class DayPilotNavigatorComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {\r\n    private _requestUpdate;\r\n    private _hashOptions;\r\n    private _hashDate;\r\n    private _hashEvents;\r\n    private _onTrs;\r\n    date: DayPilot.Date;\r\n    events: DayPilot.EventDataShort[];\r\n    config: any;\r\n    dateChange: EventEmitter<DayPilot.Date>;\r\n    private _id;\r\n    control: DayPilot.Navigator;\r\n    readonly id: string;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    ngDoCheck(): void;\r\n    private dispose();\r\n    private updateOptions();\r\n    private updateEvents();\r\n}\r\nexport declare class DayPilotModalComponent implements OnInit {\r\n    private element;\r\n    autoFocus: boolean;\r\n    close: EventEmitter<any>;\r\n    private _visibility;\r\n    constructor(element: ElementRef);\r\n    readonly visible: boolean;\r\n    ngOnInit(): void;\r\n    show(): void;\r\n    hide(result?: any): void;\r\n}\r\nexport declare class DayPilotModule {\r\n}\r\n"]}