import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { CarouselComponent } from './carousel.component';
import { Overlay } from './overlay/overlay.service';
import { EventService as OverlayEventService } from './overlay/event.service';
import { defaultProperties } from './default-properties';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './overlay/overlay.service';
import * as ɵngcc2 from './overlay/event.service';
let Gallery = class Gallery {
    constructor(overlay, overlayEventService) {
        this.overlay = overlay;
        this.overlayEventService = overlayEventService;
    }
    load(properties) {
        properties = this.applyPropertieDefaults(defaultProperties, properties);
        this.overlay.load({
            id: 'gallery',
            mainComponent: CarouselComponent,
            width: document.body.clientWidth + 'px',
            overlayBackdrop: true,
            position: 'fixed',
            metadata: {
                images: properties.images,
                index: properties.index,
                width: document.body.clientWidth,
                height: window.innerHeight,
                objectFit: 'none',
                margin: 0,
                transitionDuration: properties.transitionDuration,
                overflowCellsLimit: 1,
                transitionTimingFunction: properties.transitionTimingFunction,
                counter: properties.counter,
                counterSeparator: properties.counterSeparator,
                arrows: properties.arrows,
                minSwipeDistance: properties.minSwipeDistance
            }
        });
    }
    close() {
        this.overlayEventService.emitChangeEvent({
            type: 'Hide'
        });
    }
    applyPropertieDefaults(defaultProperties, properties) {
        if (!properties) {
            properties = {};
        }
        for (var propertie in properties) {
            if (properties[propertie] === undefined) {
                delete properties[propertie];
            }
        }
        this._defaultProperties = Object.assign({}, defaultProperties);
        return Object.assign(this._defaultProperties, properties);
    }
};
Gallery.ɵfac = function Gallery_Factory(t) { return new (t || Gallery)(ɵngcc0.ɵɵinject(ɵngcc1.Overlay), ɵngcc0.ɵɵinject(ɵngcc2.EventService)); };
Gallery.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Gallery, factory: function (t) { return Gallery.ɵfac(t); } });
Gallery.ctorParameters = () => [
    { type: Overlay },
    { type: OverlayEventService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Gallery, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc2.EventService }]; }, null); })();
export { Gallery };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLWdhbGxlcnkvbGliL2dhbGxlcnkuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBa0csTUFBTSxlQUFlLENBQUM7QUFFMUksT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFFdkQsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBRWxELE9BQU8sRUFBQyxZQUFZLElBQUksbUJBQW1CLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUM1RSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQzs7OztBQUd2RCxJQUFhLE9BQU8sR0FBcEIsTUFBYSxPQUFPO0FBQ25CLElBRUcsWUFDVyxPQUFnQixFQUNmLG1CQUF3QztBQUN4RCxRQUZlLFlBQU8sR0FBUCxPQUFPLENBQVM7QUFDL0IsUUFBZ0Isd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtBQUFFLElBQUMsQ0FBQztBQUU1RCxJQUFXLElBQUksQ0FBQyxVQUE2QjtBQUM1QyxRQUFPLFVBQVUsR0FBRyxJQUFJLENBQUMsc0JBQXNCLENBQUMsaUJBQWlCLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFFaEYsUUFBUSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztBQUN6QixZQUFXLEVBQUUsRUFBRSxTQUFTO0FBQ3hCLFlBQVcsYUFBYSxFQUFFLGlCQUFpQjtBQUMzQyxZQUFXLEtBQUssRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBQyxJQUFJO0FBQ2hELFlBQVcsZUFBZSxFQUFFLElBQUk7QUFDaEMsWUFBVyxRQUFRLEVBQUUsT0FBTztBQUM1QixZQUFXLFFBQVEsRUFBRTtBQUNyQixnQkFBZSxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU07QUFDeEMsZ0JBQWUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxLQUFLO0FBQ3RD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LEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFsREEsQUFBQSxBQUNBLEFBQUEsQUFMQSxBQUFBLEFBREEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQXNEQSxBQXREQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlLCBJbmplY3RvciwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBFbWJlZGRlZFZpZXdSZWYsIEFwcGxpY2F0aW9uUmVmLCBDb21wb25lbnRSZWYsIEV2ZW50RW1pdHRlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7Q2Fyb3VzZWxDb21wb25lbnR9IGZyb20gJy4vY2Fyb3VzZWwuY29tcG9uZW50JztcbmltcG9ydCB7R2FsbGVyeVByb3BlcnRpZXN9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQge092ZXJsYXl9IGZyb20gJy4vb3ZlcmxheS9vdmVybGF5LnNlcnZpY2UnO1xuaW1wb3J0IHtPdmVybGF5UHJvcGVydGllc30gZnJvbSAnLi9vdmVybGF5L2ludGVyZmFjZXMnOyBcbmltcG9ydCB7RXZlbnRTZXJ2aWNlIGFzIE92ZXJsYXlFdmVudFNlcnZpY2V9IGZyb20gJy4vb3ZlcmxheS9ldmVudC5zZXJ2aWNlJzsgXG5pbXBvcnQge2RlZmF1bHRQcm9wZXJ0aWVzfSBmcm9tICcuL2RlZmF1bHQtcHJvcGVydGllcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBHYWxsZXJ5IHtcbiAgICBfZGVmYXVsdFByb3BlcnRpZXM6IE92ZXJsYXlQcm9wZXJ0aWVzO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBvdmVybGF5OiBPdmVybGF5LFxuICAgICAgICBwcml2YXRlIG92ZXJsYXlFdmVudFNlcnZpY2U6IE92ZXJsYXlFdmVudFNlcnZpY2UpIHt9XG5cbiAgICBwdWJsaWMgbG9hZChwcm9wZXJ0aWVzOiBHYWxsZXJ5UHJvcGVydGllcykge1xuICAgICAgICBwcm9wZXJ0aWVzID0gdGhpcy5hcHBseVByb3BlcnRpZURlZmF1bHRzKGRlZmF1bHRQcm9wZXJ0aWVzLCBwcm9wZXJ0aWVzKTtcblxuICAgICAgICB0aGlzLm92ZXJsYXkubG9hZCh7XG4gICAgICAgICAgICBpZDogJ2dhbGxlcnknLFxuICAgICAgICAgICAgbWFpbkNvbXBvbmVudDogQ2Fyb3VzZWxDb21wb25lbnQsXG4gICAgICAgICAgICB3aWR0aDogZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aCsncHgnLFxuICAgICAgICAgICAgb3ZlcmxheUJhY2tkcm9wOiB0cnVlLFxuICAgICAgICAgICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgICAgIGltYWdlczogcHJvcGVydGllcy5pbWFnZXMsXG4gICAgICAgICAgICAgICAgaW5kZXg6IHByb3BlcnRpZXMuaW5kZXgsXG4gICAgICAgICAgICAgICAgd2lkdGg6IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGgsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQsXG4gICAgICAgICAgICAgICAgb2JqZWN0Rml0OiAnbm9uZScsXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwLFxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbjogcHJvcGVydGllcy50cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3dDZWxsc0xpbWl0OiAxLFxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbjogcHJvcGVydGllcy50cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24sXG4gICAgICAgICAgICAgICAgY291bnRlcjogcHJvcGVydGllcy5jb3VudGVyLFxuICAgICAgICAgICAgICAgIGNvdW50ZXJTZXBhcmF0b3I6IHByb3BlcnRpZXMuY291bnRlclNlcGFyYXRvcixcbiAgICAgICAgICAgICAgICBhcnJvd3M6IHByb3BlcnRpZXMuYXJyb3dzLFxuICAgICAgICAgICAgICAgIG1pblN3aXBlRGlzdGFuY2U6IHByb3BlcnRpZXMubWluU3dpcGVEaXN0YW5jZVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xvc2UoKSB7XG4gICAgICAgIHRoaXMub3ZlcmxheUV2ZW50U2VydmljZS5lbWl0Q2hhbmdlRXZlbnQoe1xuICAgICAgICAgICAgdHlwZTogJ0hpZGUnXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGFwcGx5UHJvcGVydGllRGVmYXVsdHMoZGVmYXVsdFByb3BlcnRpZXMsIHByb3BlcnRpZXMpIHtcbiAgICAgICAgaWYgKCFwcm9wZXJ0aWVzKSB7XG4gICAgICAgICAgICBwcm9wZXJ0aWVzID0ge307XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBwcm9wZXJ0aWUgaW4gcHJvcGVydGllcykge1xuICAgICAgICAgICAgaWYgKHByb3BlcnRpZXNbcHJvcGVydGllXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHByb3BlcnRpZXNbcHJvcGVydGllXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2RlZmF1bHRQcm9wZXJ0aWVzID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdFByb3BlcnRpZXMpO1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih0aGlzLl9kZWZhdWx0UHJvcGVydGllcywgcHJvcGVydGllcyk7XG4gICAgfVxufSJdfQ==